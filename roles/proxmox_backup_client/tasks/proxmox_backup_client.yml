---
- set_fact:
    proxmox_backup:
      cron: "{{ proxmox_backup.cron }}"
      backup_name: "{{ proxmox_backup.backup_name | default((primary_user | default(ansible_user)) + '-home.pxar') }}"
      backup_root: "{{ proxmox_backup.backup_root | default('/home/' + (primary_user | default(ansible_user)) + '/') }}"
      include_network: "{{ proxmox_backup.include_network | default(False) }}"
      include_timeshift: "{{ proxmox_backup.include_timeshift | default(True) }}"
      timeshift_path: "{{ proxmox_backup.timeshift_path | default('/timeshift/') }}"
      passwd_file: "{{ proxmox_backup.passwd_file | default('proxmox-backup-passwd') }}"
      username: "{{ proxmox_backup.username | default(backup[ansible_hostname].username) }}"
      token_name: "{{ ansible_hostname }}"
      server: backoops.leigh.delamere:8007
      datastore: NVMe
    service_dir: /etc/proxmox-backup
- debug: var=proxmox_backup

# - name: add proxmox copr repo
#   when: ansible_facts.distribution == 'Fedora'
#   shell:
#     cmd: dnf -y copr enable derenderkeks/proxmox-backup-client
#     creates: /etc/yum.repos.d/_copr:copr.fedorainfracloud.org:derenderkeks:proxmox-backup-client.repo

# - name: install proxmox backup client
#   package:
#     name: proxmox-backup-client

# - name: create backup service directory
#   file:
#     path: "{{ service_dir }}"
#     state: directory
#     mode: 0755

# - name: write backup api token
#   copy:
#     content: "{{ vault.backup[ansible_hostname].api_token }}"
#     dest: "{{ service_dir }}/{{ proxmox_backup.passwd_file }}"
#     owner: root
#     group: root
#     mode: "0600"
#   no_log: true

- name: generate backup client config
  lineinfile:
    path: "{{ service_dir }}/proxmox-backup.env"
    regexp: ^{{ item.key }}=
    line: '{{ item.key }}="{{ (item.value | lower) if "include" in item.key else item.value }}"'
    insertafter: EOF
    create: true
    mode: "0644"
  loop: "{{ proxmox_backup | dict2items | rejectattr('key', '==', 'cron') }}"

- name: copy backup service script
  template:
    src: files/proxmox-backup.sh.j2
    dest: "{{ service_dir }}/proxmox-backup.sh"
    mode: "0755"

- name: copy backup service configs
  template:
    src: files/proxmox-backup.{{ item }}.j2
    dest: /etc/systemd/system/proxmox-backup.{{ item }}
  vars:
    service_path: "{{ service_dir }}"
  loop:
    - timer
    - service

- name: disable backup service
  systemd:
    name: proxmox-backup.service
    enabled: false
    daemon_reload: false

- name: start backup timer
  systemd:
    name: proxmox-backup.timer
    enabled: true
    state: started
    daemon_reload: true
