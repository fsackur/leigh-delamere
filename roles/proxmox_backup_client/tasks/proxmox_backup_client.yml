---
- set_fact:
    proxmox_backup:
      backup_name: "{{ primary_user }}-home.pxar"
      backup_root: /home/{{ primary_user }}/
      include_timeshift: true
      timeshift_path: /timeshift/
      passwd_file: proxmox-backup-passwd
      username: "{{ vault.backup[ansible_hostname].username }}"
      token_name: "{{ ansible_hostname }}"
      server: backoops.leigh.delamere:8007
      datastore: NVMe

- name: add proxmox copr repo
  shell:
    cmd: dnf -y copr enable derenderkeks/proxmox-backup-client
    creates: /etc/yum.repos.d/_copr:copr.fedorainfracloud.org:derenderkeks:proxmox-backup-client.repo

- name: install proxmox backup client
  package:
    name: proxmox-backup-client

- name: create backup service directory
  file:
    path: /etc/proxmox-backup
    state: directory
    mode: 0755
  register: service_dir

- name: write backup api token
  copy:
    content: "{{ vault.backup[ansible_hostname].api_token }}"
    dest: "{{ service_dir.path }}/{{ proxmox_backup.passwd_file }}"
    owner: root
    group: root
    mode: "0600"
  no_log: true

- name: generate backup client config
  lineinfile:
    path: "{{ service_dir.path }}/proxmox-backup.env"
    regexp: ^{{ item.key }}=
    line: '{{ item.key }}="{{ item.value }}"'
    insertafter: EOF
    create: true
    mode: "0755"
  loop: "{{ proxmox_backup | dict2items }}"

- name: copy backup service script
  copy:
    src: proxmox-backup.sh
    dest: "{{ service_dir.path }}"
    mode: "0755"

- name: copy backup service configs
  template:
    src: files/proxmox-backup.{{ item }}.j2
    dest: /etc/systemd/system/proxmox-backup.{{ item }}
  vars:
    service_path: "{{ service_dir.path }}"
  loop:
    - timer
    - service

- name: disable backup service
  systemd:
    name: proxmox-backup.service
    enabled: false
    daemon_reload: false

- name: start backup timer
  systemd:
    name: proxmox-backup.timer
    enabled: true
    state: started
    daemon_reload: true
